Resources:
  DalvacationHomeUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: dalvacationhome  
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
      Schema:
        - Name: email
          Required: true
          Mutable: true
        - Name: role
          AttributeDataType: String
          Mutable: true
          Required: false
      EmailVerificationSubject: "Verify your email for DalvacationHome"
      EmailVerificationMessage: "Please click the link below to verify your email address. {####}"
      MfaConfiguration: "OFF"
      EmailConfiguration:
        EmailSendingAccount: "COGNITO_DEFAULT"
      VerificationMessageTemplate:
        EmailMessage: "Please click the link below to verify your email address. {####}"
        EmailSubject: "Verify your email for DalvacationHome"
      LambdaConfig:
        PostAuthentication:
          Fn::GetAtt: [PostAuthenticationLoggingFunction, Arn] 

  DalvacationHomeUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId:
        Ref: DalvacationHomeUserPool
      ClientName: dalvacationhome  
      GenerateSecret: false  # Set to false for public clients

  PostAuthenticationLoggingFunction: 
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: PostAuthenticationLoggingFunction  
      Handler: index.handler
      Role: arn:aws:iam::843898296640:role/LabRole
      Code:
        S3Bucket: dalvacationhome-lambdas
        S3Key: post-authentication-logging.zip
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 30
